{
  "version": 3,
  "file": "app.css",
  "sources": [
    "Auditor.svelte",
    "AuditorFilter.svelte",
    "AuditorSamples.svelte",
    "Criterion.svelte",
    "Button.svelte",
    "Details.svelte",
    "EarlResult.svelte",
    "Flex.svelte",
    "GridItem.svelte",
    "NavigationBar.svelte",
    "Page.svelte",
    "Panel.svelte",
    "ResourceLink.svelte",
    "AddOther.svelte",
    "Editable.svelte",
    "Field.svelte",
    "Fieldset.svelte",
    "HelpText.svelte",
    "MultipleChoice.svelte",
    "LanguageSelect.svelte",
    "BaseLayout.svelte"
  ],
  "sourcesContent": [
    "<div class=\"Auditor\">\n  <div class=\"Auditor__samples\">\n    <AuditorSamples />\n  </div>\n\n  <AuditorFilter />\n\n  <div class=\"Auditor__Assertions\">\n    <AuditorView criteria=\"{criteria.length > 0 ? criteria : versionedTests}\" />\n  </div>\n</div>\n\n<style>\n  .Auditor {\n  }\n\n  .Auditor__samples {\n    grid-area: left;\n    grid-row: 1 / span 2;\n  }\n\n  :global(.Auditor .Auditor__Filters > *) {\n    margin-bottom: 0;\n    break-inside: avoid-column;\n  }\n\n  .Auditor__Assertions {\n    grid-area: content;\n    grid-row: 2;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  :global(.Auditor__Assertions > *:not(:last-child)) {\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 60rem) {\n    .Auditor {\n      display: grid;\n      grid-template-columns:\n        [left-start] 1fr\n        [left-end content-start] 2fr\n        [content-end];\n      grid-gap: 32px;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditFilter } from '../../data/stores/auditStore.js';\n  import { CONFORMANCE_LEVELS } from '../../data/stores/wcagStore.js';\n\n  import AuditorFilter from './AuditorFilter.svelte';\n  import AuditorSamples from './AuditorSamples.svelte';\n  import AuditorView from './AuditorView.svelte';\n\n  const { scopeStore } = getContext('app');\n  const { testCriteria } = getContext('Evaluation');\n\n  if ($auditFilter['VERSION'].length === 0) {\n    $auditFilter['VERSION'] = $scopeStore['WCAG_VERSION'];\n    $auditFilter['LEVEL'] = CONFORMANCE_LEVELS.filter(\n      (level) => $scopeStore['CONFORMANCE_TARGET'].indexOf(level) >= 0\n    );\n  }\n\n  $: versionedTests = $testCriteria.filter((test) => {\n    if (!test.version) {\n      return false;\n    }\n\n    return test.version.indexOf($auditFilter['VERSION']) >= 0;\n  });\n\n  $: criteria = versionedTests\n    // Filter by conformance level\n    .filter((criterion) => {\n      if (!criterion.conformanceLevel) {\n        return false;\n      }\n\n      return $auditFilter['LEVEL'].indexOf(criterion.conformanceLevel) >= 0;\n    });\n</script>\n",
    "<div class=\"Auditor__Filter box\">\n  <header class=\"Auditor__Filter__header box-h\">\n    {$translate('UI.AUDITOR.FILTER_TITLE', { default: 'Show' })}\n  </header>\n\n  <div class=\"Auditor__Filters box-i\">\n    <MultipleChoice\n      id=\"filter_wcag_version\"\n      label=\"Criterion WCAG Version\"\n      type=\"radio\"\n      options=\"{wcagVersions}\"\n      bind:value=\"{$auditFilter['VERSION']}\"\n    />\n\n    <MultipleChoice\n      id=\"filter_conformance_level\"\n      label=\"Criterion conformance level\"\n      options=\"{conformanceLevels}\"\n      bind:value=\"{$auditFilter['LEVEL']}\"\n    />\n  </div>\n</div>\n\n<style>\n  .Auditor__Filter {\n    grid-area: content;\n    grid-row: 1;\n    margin: 0 0 3rem;\n  }\n\n  .Auditor__Filters {\n    columns: 2 20rem;\n    column-gap: 2rem;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditFilter } from '../../data/stores/auditStore.js';\n  import { CONFORMANCE_LEVELS, VERSIONS } from '../../data/stores/wcagStore.js';\n\n  import MultipleChoice from '../formcomponents/MultipleChoice.svelte';\n\n  const { translate } = getContext('app');\n\n  let wcagVersions = VERSIONS.reduce((result, version, index) => {\n    const newFilter = {\n      title: `WCAG ${version}`,\n      value: version\n    };\n    result.push(newFilter);\n\n    if (index === VERSIONS.length - 1) {\n      return result;\n    }\n\n    // Add a version added filter\n    // Last index excluded, it is the first version.\n    result.push({\n      title: `Added in WCAG ${version}`,\n      value: `${version}+`\n    });\n\n    return result;\n  }, []);\n\n  $: conformanceLevels = CONFORMANCE_LEVELS.map((level) => {\n    return {\n      title: `${$translate('WCAG.COMMON.CONFORMANCE_LEVEL')} ${level}`,\n      value: level\n    };\n  });\n</script>\n",
    "<Panel title=\"{$translate('PAGES.AUDIT.HD_SAMPLE_SELECT')}\" open>\n  <Details label=\"show info\">\n    <div>{$translate('PAGES.AUDIT.INF_AUDIT_SAMPLE')}</div>\n  </Details>\n\n  <Flex align=\"center\" justify=\"stretch\">\n    <div>\n      <input\n        id=\"AuditorSamples__multiselect\"\n        type=\"checkbox\"\n        indeterminate=\"{someChecked}\"\n        checked=\"{allChecked}\"\n        on:change=\"{handleMultiselectClick}\"\n      /><label\n        for=\"AuditorSamples__multiselect\"\n        class=\"visuallyhidden\"\n      >{$translate('PAGES.AUDIT.SELECT_ALL')}</label>\n    </div>\n    <div style=\"margin-left: auto;\">\n      <button class=\"button button-small button-secondary\">V<span class=\"visuallyhidden\">{$translate('PAGES.AUDIT.BTN_COMPLETE_SELECTED')}</span></button>\n      <button class=\"button button-small button-secondary\">X<span class=\"visuallyhidden\">{$translate('PAGES.AUDIT.BTN_UNCOMPLETE_SELECTED')}</span></button>\n      <button class=\"button button-small button-secondary\">^<span class=\"visuallyhidden\">{$translate('PAGES.AUDIT.BTN_OPEN_SELECTED')}</span></button>\n    </div>\n  </Flex>\n\n  <hr />\n\n  {#each $allSamples as sample, index (sampleID(index))}\n    <Flex align=\"center\" justify=\"start\" wrap>\n      <Flex align=\"start\" justify=\"start\">\n        <input id=\"sample__{sampleID(index)}\" type=\"checkbox\" value=\"{sample.ID}\" bind:group=\"{$auditSamples}\" />\n        <label\n          for=\"sample__{sampleID(index)}\"\n        >{sample.title || sample.description || `Sample ${sampleID(index)}`}\n          {#if sample.completed}\n            <span\n              class=\"visuallyhidden\"\n            >{$translate('PAGES.AUDIT.TESTED')}</span>\n          {/if}\n        </label>\n      </Flex>\n      <div class=\"AuditorSample__controls\">\n        {#if isURL(sample.description)}\n          <a class=\"button button-small\" href=\"{sample.description}\">Open</a>\n        {/if}\n      </div>\n    </Flex>\n  {:else}\n    <div>{$translate('PAGES.AUDIT.NO_SAMPLE')}</div>\n  {/each}\n</Panel>\n\n<style media=\"screen\">\n  .AuditorSample__controls {\n    margin-left: auto;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditSamples } from '../../data/stores/auditStore.js';\n  import { allSamples } from '../../data/stores/sampleStore.js';\n\n  import Details from '../Details.svelte';\n  import Flex from '../Flex.svelte';\n  import Panel from '../Panel.svelte';\n\n  const { translate } = getContext('app');\n\n  $: allSampleIDs = $allSamples.map((sample) => sample.ID);\n  $: allChecked = allSampleIDs.length === $auditSamples.length;\n  $: someChecked = !allChecked && $auditSamples.length > 0;\n\n  function sampleID(index) {\n    return parseInt(index, 10) + 1;\n  }\n\n  function isURL(value) {\n    try {\n      return new URL(value);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function handleMultiselectClick() {\n    $auditSamples = [];\n\n    if (!allChecked) {\n      $auditSamples = allSampleIDs;\n    }\n  }\n</script>\n",
    "<!--\n * @component\n * Criterion\n * -->\n<div class=\"Criterion\">\n  <header class=\"Criterion__Header\">\n    <h3 class=\"Criterion__Header__heading\">\n      {num}: {test.title}\n    </h3>\n    <span class=\"Criterion__Header__level\">(Level {conformanceLevel})</span>\n  </header>\n\n  <Details\n    label=\"{`${$translate('PAGES.AUDIT.BTN_SHOW_TEXT')} <span class=\"visuallyhidden\">for ${$translate(`WCAG.WCAG21.${num}.TITLE`)}</span>`}\"\n  >\n    <div>{test.description}</div>\n\n    {#if test.details.length > 0}\n      <dl>\n        {#each test.details as detail}\n          <dt>{detail.title}</dt>\n          <dd>\n            <p>{detail.description}</p>\n          </dd>\n        {/each}\n      </dl>\n    {/if}\n\n    {#if notes}\n      <div>\n        <span>test.description.notes</span>\n        <ol>\n          {#each notes as note}\n            <li>\n              <p class=\"note\"><span>Note:</span> <span>{note}</span></p>\n            </li>\n          {/each}\n        </ol>\n      </div>\n    {/if}\n\n    <div class=\"\">\n      <ResourceLink\n        href=\"https://www.w3.org/WAI/WCAG21/Understanding/{$translate(`WCAG.WCAG21.SUCCESS_CRITERION.${num}.ID`)}.html\"\n      >\n        {$translate('PAGES.AUDIT.UNDERSTAND')}\n        {num}\n      </ResourceLink>\n      <ResourceLink\n        href=\"https://www.w3.org/WAI/WCAG21/quickref/#{$translate(`WCAG.WCAG21.SUCCESS_CRITERION.${num}.ID`)}\"\n      >\n        {$translate('PAGES.AUDIT.HOW_TO')}\n        {num}\n      </ResourceLink>\n    </div>\n  </Details>\n\n  <!--\n   * Results for scope\n   * assertion.subject === WebSite\n   * assertion.result\n   * -->\n  <EarlResult\n    label=\"{$translate('PAGES.AUDIT.SAMPLE_FINDINGS')}\"\n    test=\"{test}\"\n    subject=\"{scopeSubject}\"\n  />\n\n  <Details label=\"{`<h4>${$translate('PAGES.AUDIT.BTN_EXPAND_PAGES')}</h4>`}\">\n    <!--\n     * Sample results should be generated from\n     * (sample) assertions.\n     * Assertions should be preferably created at\n     * samplePage or sampleInput?\n     * Then assertions should be filtered\n     * by the selected list of AuditorSamples.\n     *\n     * Then each assertion => <EarlResult {...assertion} />\n   -->\n    {#each $allSamples as sample, index (`${num}-${sample.ID}`)}\n      {#if $auditSamples.indexOf(sample.ID) >= 0}\n        <EarlResult\n          label=\"{$translate('PAGES.AUDIT.RESULTS_FOR')}: {sample.title || sample.description || `Sample ${index + 1}`}\"\n          test=\"{test}\"\n          subject=\"{sample}\"\n        />\n      {/if}\n    {:else}\n      <p>No sample(s) selected.</p>\n    {/each}\n  </Details>\n</div>\n<!-- /component -->\n\n<style>\n  .Criterion {\n    background-color: var(--pure-white);\n    border: 1px solid var(--line-grey);\n    box-shadow: 1px 1px 4px -4px #000;\n    padding: 1em;\n  }\n\n  .Criterion__Header {\n    margin-bottom: 1em;\n    font-size: 1em;\n    line-height: 1.5em;\n  }\n\n  .Criterion__Header > * {\n    margin: 0;\n    padding: 0;\n    font-size: inherit;\n    line-height: inherit;\n  }\n\n  .Criterion__Header__heading {\n    font-size: 1.25em;\n    font-weight: normal;\n  }\n  .Criterion__Header__level {\n    font-style: normal;\n    vertical-align: middle;\n    white-space: nowrap;\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n\n  import { auditSamples } from '../../data/stores/auditStore.js';\n  import { allSamples } from '../../data/stores/sampleStore.js';\n  import subjects, { TestSubjectTypes } from '../../data/stores/earl/subjectStore/';\n\n  import Details from '../Details.svelte';\n  import EarlResult from '../EarlResult.svelte';\n  import ResourceLink from '../ResourceLink.svelte';\n\n  export let test;\n\n  const { translate } = getContext('app');\n  let notes;\n  const { conformanceLevel, num } = test;\n\n  let scopeSubject = $subjects.find((subject) => {\n    return subject.type.indexOf(TestSubjectTypes.WEBSITE) >= 0;\n  });\n</script>\n",
    "{#if fake}\n  <span class=\"{classNames}\"><slot /></span>\n{:else}\n  <button type=\"button\" class=\"{classNames}\" on:click>\n    <slot />\n  </button>\n{/if}\n\n<style>\n  .Button {\n    box-sizing: border-box;\n    min-width: 1.5rem;\n  }\n</style>\n\n<script>\n  export let type = 'primary';\n  export let fake = false;\n  export let small = false;\n\n  let classNames = [\n    'Button',\n    `Button--${type}`,\n    small ? 'Button--small' : '',\n    'button',\n    `button-${type}`,\n    small ? 'button-small' : ''\n  ].join(' ');\n</script>\n",
    "<!--\n * @component\n * Details\n * @property label <String|@html>\n * @slot Detail contents\n * -->\n<details class=\"Details\" bind:open>\n  <summary class=\"Details__summary\">\n    <Flex direction=\"row\" align=\"start\" justify=\"start\">\n      {#if icon.position !== 'right'}\n        <span class=\"Details__icon\"><Button type=\"secondary\" small fake>\n            {@html iconValue}\n          </Button></span>\n      {/if}\n      <span class=\"Details__label\">{@html label}</span>\n      {#if icon.position === 'right'}\n        <span class=\"Details__icon\"><Button type=\"secondary\" small fake>\n            {@html iconValue}\n          </Button></span>\n      {/if}\n    </Flex>\n  </summary>\n\n  <div class=\"Details__body\">\n    {#if open}\n      <slot />\n    {/if}\n  </div>\n</details>\n<!-- /component -->\n\n<style>\n  .Details {\n  }\n\n  .Details__icon {\n    flex-grow: 0;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .Details__summary {\n    list-style: none;\n  }\n\n  .Details__summary::-webkit-details-marker {\n    display: none;\n  }\n\n  :global(.Details__label > *) {\n    margin: 0;\n    padding: 0;\n  }\n\n  .Details__label:not(:first-child) {\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n\n  .Details__icon + .Details__label,\n  .Details__label + .Details__icon {\n    margin-left: 0.5em;\n  }\n\n  .Details__body {\n  }\n\n  :global(.Details__body > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n\n  :global(.Details__body > *:last-child) {\n    margin: 0;\n  }\n</style>\n\n<script>\n  import Button from './Button.svelte';\n  import Flex from './Flex.svelte';\n\n  export let label = 'label';\n  export let open = false;\n  export let icon = {\n    collapse: '–',\n    expand: '+',\n    position: 'left'\n  };\n\n  // Enforce icon defaults\n  if (!icon.collapse) {\n    icon.collapse = '-';\n  }\n\n  if (!icon.expand) {\n    icon.expand = '+';\n  }\n\n  if (!icon.position) {\n    icon.position = 'left';\n  }\n\n  $: iconValue = open ? icon.collapse : icon.expand;\n</script>\n",
    "<!--\n * EarlResult\n *\n * use like:\n *   <EarlResult {...assertion} />\n *\n * Where assertion should be like\n * an earl:Assertion object picked from a store.\n *\n * Important here is to pass the correct result here\n * -->\n<fieldset class=\"Criterion__Result__container\">\n  <legend class=\"Criterion__Subject\">\n    {#if label}\n      {label}\n    {:else}\n      {$translate('PAGES.AUDIT.RESULTS_FOR')}: {subject.title || subject.description || `subject ${subject.ID}`}\n    {/if}\n  </legend>\n\n  <Flex direction=\"row\" align=\"start\" justify=\"between\" wrap>\n    <div class=\"Criterion__Result--outcome\">\n      <Select\n        id=\"{`assertion__${_assertion.ID}--result__outcome`}\"\n        label=\"{$translate('PAGES.AUDIT.LABEL_OUTCOME')}\"\n        options=\"{outcomeOptions}\"\n        bind:value=\"{_assertion.result.outcome}\"\n        on:change=\"{handleResultChange}\"\n      />\n    </div>\n\n    <div class=\"Criterion__Result--description\">\n      <Textarea\n        id=\"{`assertion__${_assertion.ID}--result__description`}\"\n        label=\"{$translate('PAGES.AUDIT.ASSERTION_RESULT_DESCRIPTION_LABEL')}\"\n        bind:value=\"{_assertion.result.description}\"\n        on:change=\"{handleResultChange}\"\n      />\n    </div>\n  </Flex>\n</fieldset>\n\n<style>\n  .Criterion__Result__container {\n    display: block;\n    border: none;\n  }\n\n  .Criterion__Subject {\n    padding: 0;\n    font-size: 1em;\n  }\n\n  .Criterion__Result--outcome {\n    margin-right: 2rem;\n  }\n\n  .Criterion__Result--description {\n    flex-basis: 15rem;\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n</style>\n\n<script>\n  /**\n   * This is a result that belongs to an Assertion\n   * The assertion required should match:\n   * - subject\n   * - test\n   */\n\n  import { getContext } from 'svelte';\n  import assertions from '../data/stores/earl/assertionStore.js';\n\n  import Flex from './Flex.svelte';\n  import Select from './formcomponents/Select.svelte';\n  import Textarea from './formcomponents/Textarea.svelte';\n\n  export let label = undefined;\n  // Used to display subject.title\n  export let subject = {};\n\n  // Used for id creation (test.id)\n  export let test = {};\n\n  const { translate } = getContext('app');\n  const { outcomeValues } = getContext('Evaluation');\n\n  $: outcomeOptions = $outcomeValues.map((outcomeValue, index) => {\n    const title = outcomeValue.title;\n    const value = outcomeValue;\n\n    return {\n      title,\n      value,\n      selected: index === $outcomeValues.length - 1\n    };\n  });\n\n  // Create or get an Assertion\n  $: _assertion =\n    $assertions.find(($assertion) => {\n      return $assertion.test === test && $assertion.subject === subject;\n    }) || assertions.create({ subject, test });\n\n  function handleResultChange() {\n    _assertion.result.update();\n  }\n</script>\n",
    "<!--\n * @component\n * Flex\n *\n * @license MIT\n * @copyright 2020 Dave Lunny\n * @url https://github.com/himynameisdave/svelte-flex/\n * -->\n<div class=\"{classNames}\" {...$$restProps}>\n  <slot />\n</div>\n<!-- /component -->\n\n<style>\n  .Flex {\n    display: flex;\n  }\n  /* Direction: 'row' | 'column' */\n  .flex-direction--row {\n    flex-direction: row;\n  }\n  .flex-direction--column {\n    flex-direction: column;\n  }\n  /* Reverse the order */\n  .flex-direction--row--reverse {\n    flex-direction: row-reverse;\n  }\n  .flex-direction--column--reverse {\n    flex-direction: column-reverse;\n  }\n  /* Align: 'start' | 'center' | 'end' | 'stretch' */\n  .flex-align--start {\n    align-items: flex-start;\n  }\n  .flex-align--center {\n    align-items: center;\n  }\n  .flex-align--end {\n    align-items: flex-end;\n  }\n  .flex-align--stretch {\n    align-items: stretch;\n  }\n  /* Justfy: 'start' | 'center' | 'end' | 'around' | 'between' | 'evenly' */\n  .flex-justify--start {\n    justify-content: flex-start;\n  }\n  .flex-justify--center {\n    justify-content: center;\n  }\n  .flex-justify--end {\n    justify-content: flex-end;\n  }\n  .flex-justify--around {\n    justify-content: space-around;\n  }\n  .flex-justify--between {\n    justify-content: space-between;\n  }\n  .flex-justify--evenly {\n    justify-content: space-evenly;\n  }\n  .flex-wrap {\n    flex-wrap: wrap;\n  }\n</style>\n\n<script>\n  export let direction = 'row';\n  export let align = 'center';\n  export let justify = 'center';\n  export let reverse = false;\n  export let wrap = false;\n\n  $: classNames = [\n    'Flex',\n    `flex-direction--${direction}${reverse ? '--reverse' : ''}`,\n    `flex-align--${align}`,\n    `flex-justify--${justify}`,\n    wrap ? 'flex-wrap' : '',\n    //  Apply any additional/custom classNames, if provided\n    $$restProps.class ? $$restProps.class : '',\n  ].join(' ');\n</script>\n",
    "<div class=\"{classNames}\" {style}>\n  <slot />\n</div>\n\n<style>\n  .Grid__Item {\n    column-span: all;\n  }\n\n  .grid-area--full {\n    grid-column: 2 / span 8;\n  }\n\n  .grid-area--content {\n    grid-column: 2 / span 6;\n  }\n\n  .grid-area--right {\n    grid-column: 8 / span 2;\n  }\n</style>\n\n<script>\n  export let area = 'content';\n  export let row;\n\n  $: classNames = [\n    'Grid__Item',\n    `grid-area--${area}`,\n  ].join(' ');\n\n  $: style = `\n    grid-row: ${row ? row : 'auto'};\n  `;\n</script>\n",
    "<!--\n * @component\n * <Navigation>\n *  -->\n<nav class=\"Nav\">\n  <Grid>\n    <GridItem area=\"full\">\n      <ol class=\"Nav__Itemcontainer\">\n        {#each navigationItems as navigationItem}\n          <li\n            class=\"nav__item\"\n            class:current=\"{navigationItem.path === currentPath}\"\n          >\n            <Link to=\"{navigationItem.path}\">{navigationItem.title}</Link>\n          </li>\n        {/each}\n      </ol>\n    </GridItem>\n  </Grid>\n</nav>\n<!-- </Nav> -->\n\n<style>\n  .Nav {\n    background-color: #d0e1f1;\n    background-color: var(--cloudy-subtle);\n  }\n\n  .Nav__Itemcontainer {\n    grid-column: 2 / 10;\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow-x: auto;\n  }\n\n  .nav__item.current {\n    background-color: #fff;\n  }\n\n  @media (min-width: 40.1em) {\n    .Nav__Itemcontainer {\n      flex-direction: row;\n    }\n  }\n</style>\n\n<script>\n  import { Link, useLocation } from 'svelte-navigator';\n\n  import Grid from './Grid.svelte';\n  import GridItem from './GridItem.svelte';\n\n  let navigationItems = [\n    {\n      path: '/',\n      title: 'Overview'\n    },\n    {\n      path: '/evaluation/scope',\n      title: '1. Scope'\n    },\n    {\n      path: '/evaluation/explore',\n      title: '2. Explore'\n    },\n    {\n      path: '/evaluation/sample',\n      title: '3. Sample'\n    },\n    {\n      path: '/evaluation/audit',\n      title: '4. Audit'\n    },\n    {\n      path: '/evaluation/summary',\n      title: '5. Summary'\n    },\n    {\n      path: '/evaluation/view-report',\n      title: 'View report'\n    }\n  ];\n\n  const location = useLocation();\n\n  $: currentPath = $location.pathname;\n</script>\n",
    "<svelte:head>\n  <title>{title}</title>\n</svelte:head>\n\n<main>\n  <h1>{title}</h1>\n  <slot />\n</main>\n\n<style>\n  :global(main > *:not(:last-child)) {\n    margin-bottom: 1em;\n  }\n</style>\n\n<script>\n  export let title;\n</script>\n",
    "<aside\n  class=\"Panel your-report\"\n  class:hidden=\"{!open}\"\n>\n  <header class=\"Panel__Header\">\n    {#if title}\n      <h2 class=\"Panel__Header__heading\">{title}</h2>\n    {/if}\n    <button\n      type=\"button\"\n      class=\"Panel__Toggle button-small showhidebutton\"\n      on:click=\"{handleToggleClick}\"\n      aria-expanded=\"{open}\"\n    >{!open ? `Show “${title}”` : 'Hide'}</button>\n  </header>\n\n  <div class=\"Panel__Body\" hidden=\"{!open}\">\n    <slot>\n      <p>Panel body</p>\n    </slot>\n  </div>\n</aside>\n\n<style>\n  .Panel {\n    box-sizing: border-box;\n    border: 1px solid var(--line-grey);\n    padding: 1em;\n    width: 100%;\n    background-color: var(--footer-grey);\n    box-shadow: 0px 2px 8px -7px #000;\n  }\n\n  .Panel.hidden {\n    width: auto;\n    padding: 1em;\n    border-color: transparent;\n    background-color: transparent;\n    box-shadow: none;\n  }\n\n  @media (min-width: 60em) {\n    .Panel {\n      position: sticky;\n      top: 1em;\n    }\n  }\n  .Panel__Header {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    border-bottom: 1px solid var(--line-grey);\n    margin-bottom: 1em;\n  }\n\n  .Panel.hidden > .Panel__Header {\n    border-bottom-color: transparent;\n  }\n\n  .Panel__Header__heading {\n    margin: 0;\n    margin-right: 1em;\n    border-bottom: none;\n    font-size: 1em;\n    line-height: 1.5;\n    font-weight: bold;\n  }\n\n  .Panel.hidden .Panel__Header__heading {\n    display: none;\n  }\n\n  .Panel:not(.hidden) > .Panel__Body {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n  }\n\n  :global(.Panel__Body > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n\n  :global(.Panel__Body > :last-child) {\n    margin-bottom: 0;\n  }\n\n  .Panel__Toggle {\n    flex-shrink: 0;\n    margin-left: auto;\n    padding: 0.25em;\n    cursor: pointer;\n    word-wrap: break-word;\n  }\n\n  .Panel.hidden .Panel__Toggle {\n    flex-shrink: 1;\n  }\n\n  .showhidebutton::after {\n    /* Corrections */\n    margin-left: 0.5em;\n  }\n</style>\n\n<script>\n  export let title = null;\n  export let open = false;\n\n  function handleToggleClick() {\n    let toggleTo = !open;\n\n    open = toggleTo;\n  }\n</script>\n",
    "<a\n  href=\"{href}\"\n  class=\"link-to-guidance button button-small button-secondary\"\n  target=\"_blank\"\n  rel=\"noopener roreferrer\"\n>\n  <svg aria-hidden=\"true\" class=\"icon-info\"><use\n      xlink:href=\"images/icons.svg#icon-info\"\n    ></use></svg>\n  <span>\n    <slot />\n  </span>\n</a>\n\n<style>\n  .link-to-guidance {\n    border-width: 1px;\n    font-weight: normal;\n    color: var(--dk-grey);\n    border-color: var(--line-grey);\n    vertical-align: middle;\n    margin: 2px 0;\n  }\n  .link-to-guidance:hover,\n  .link-to-guidance:focus {\n    color: var(--off-black);\n    background-color: var(--off-white);\n  }\n  .link-to-guidance svg {\n    margin-right: 0.25em;\n  }\n</style>\n\n<script>\n  export let href;\n</script>\n",
    "<!--\n * @component\n * ListInput\n * A customizable forminput that receives\n * a value as array with either a string or an object.\n * a format of how to add a list item which is\n * an array of objects containing:\n * - required label\n * - required type; text | textarea | select | checkbox(group)\n * - optional helptext\n * - optional ...any; required props to pass on to specific formcomponents\n *\n * -->\n\n<div class=\"AddOther__container\">\n  <div\n    class=\"AddOther__Inputs\"\n    bind:this=\"{otherInputsContainer}\"\n    on:keydown=\"{handleAddKeydown}\"\n  >\n    <slot />\n  </div>\n  <Button type=\"secondary\" on:click=\"{handleAddClick}\">{label}</Button>\n</div>\n\n<style>\n  :global(.AddOther__Inputs > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n  :global(.AddOther__Inputs > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  import Button from '../Button.svelte';\n\n  export let label = 'Add';\n\n  const dispatch = createEventDispatcher();\n\n  let otherInputsContainer;\n  let otherInputs;\n\n  onMount(() => {\n    otherInputs = Array.from(\n      otherInputsContainer.querySelectorAll('input, select, textarea')\n    );\n  });\n\n  function handleAddKeydown(event) {\n    if (event.key.toLowerCase() === 'enter') {\n      event.preventDefault();\n\n      dispatchAdd();\n    }\n  }\n\n  function handleAddClick(event) {\n    event.preventDefault();\n    dispatchAdd();\n  }\n\n  function dispatchAdd() {\n    const detail = otherInputs.map((input) => {\n      return input.value;\n    });\n\n    if (otherInputs.length > 0) {\n      // Clear fields\n      otherInputs.forEach((input) => {\n        input.value = '';\n      });\n\n      otherInputs[0].focus();\n    }\n\n    dispatch('ADD', detail);\n  }\n</script>\n",
    "<div class=\"Editable\">\n  <div class=\"Editable__Contents\">\n    <slot />\n  </div>\n\n  <div class=\"Editable__Controls\">\n    {#if !persistent}\n      <button\n        type=\"button\"\n        class=\"Editable__Control--edit button-secondary\"\n        on:click=\"{handleEditClick}\"\n        bind:this=\"{EditToggle}\"\n      >{#if editing}Done{:else}Edit{/if}\n        <span class=\"visually-hidden\">{label}</span></button>\n    {/if}\n    {#if removable}\n      <button\n        type=\"button\"\n        class=\"Editable__Control--delete button-secondary\"\n        on:click=\"{dispatchDelete}\"\n      >Delete <span class=\"visually-hidden\">{label}</span></button>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .Editable {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: space-between;\n  }\n\n  :global(.Editable__Contents > *:not(:last-child)) {\n    margin-bottom: 1em;\n  }\n\n  :global(.Editable__Contents > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script context=\"module\">\n  import { writable } from 'svelte/store';\n\n  export const editMode = writable({});\n</script>\n\n<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let id = '';\n  export let label = '';\n  export let persistent = false;\n  export let removable = false;\n\n  const dispatch = createEventDispatcher();\n  const EVENT = {\n    DELETE: 'DELETE',\n    EDIT: 'EDIT'\n  };\n\n  let EditToggle;\n\n  $: editing = $editMode[id] = persistent;\n\n  function handleEditClick() {\n    if (!editing) {\n      dispatchEdit();\n    }\n\n    $editMode[id] = !editing;\n  }\n\n  function dispatchDelete() {\n    dispatch(EVENT.DELETE, id);\n  }\n\n  function dispatchEdit() {\n    dispatch(EVENT.ID, id);\n  }\n</script>\n",
    "<div class=\"Field field\">\n  {#if helptext}\n    <HelpText\n      label=\"{label && `<label for=\"${id}\">${label}</label>`}\"\n      icon={helptextIcon}\n    >\n      {@html helptext}\n    </HelpText>\n  {:else if label}<label for=\"{id}\">{label}</label>{/if}\n\n  <slot />\n</div>\n\n<style>\n  .Field {\n    padding: 0;\n  }\n\n  :global(.Field > *:not(:last-child)) {\n    margin-bottom: 0.5em;\n  }\n</style>\n\n<script>\n  import HelpText from './HelpText.svelte';\n\n  export let id;\n  export let label;\n  export let helptext;\n\n  const helptextIcon = {\n    collapse: 'Hide info',\n    expand: 'Show info',\n    position: 'right'\n  };\n</script>\n",
    "<fieldset id=\"{id}\" class=\"Fieldset field\">\n  <legend>{@html legend}</legend>\n\n  {#if helptext}\n    <div class=\"Fieldset__helptext\">\n      <Details label=\"Show info\">\n        {@html helptext}\n      </Details>\n    </div>\n  {/if}\n\n  <div class=\"Fieldset__elements\">\n    <slot />\n  </div>\n</fieldset>\n\n<style>\n  .Fieldset {\n    padding: 0;\n  }\n\n  .Fieldset__helptext {\n    margin: 1em 0;\n  }\n\n  :global(.Fieldset__elements > *:not(:last-child)) {\n    margin-bottom: 2rem;\n  }\n</style>\n\n<script>\n  import Details from '../Details.svelte';\n\n  export let id;\n  export let legend;\n  export let helptext;\n\n</script>\n",
    "<!--\n * @component\n * HelpText\n * @property label <String|@html>\n * @slot Detail contents\n * -->\n<details class=\"HelpText information\" bind:open>\n  <summary class=\"HelpText__summary\">\n    <Flex direction=\"row\" align=\"start\" justify=\"start\">\n      <div class=\"HelpText__label\">\n        {@html label}\n      </div>\n      <div class=\"HelpText__icon\">\n        <span class=\"button button-small showhidebutton\">\n          <span class=\"visuallyhidden\">,</span> {@html iconValue}\n        </span>\n      </div>\n    </Flex>\n  </summary>\n\n  <div class=\"HelpText__body\">\n    <slot />\n  </div>\n</details>\n<!-- /component -->\n\n<style>\n  .HelpText {\n    padding: 0;\n  }\n\n  .HelpText__icon {\n    flex-grow: 0;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: 0.5em;\n    height: 1.5em;\n  }\n\n  .HelpText__summary {\n    display: inline-block;\n    margin: 0;\n    list-style: none;\n  }\n\n  .HelpText__summary::-webkit-details-marker {\n    display: none;\n  }\n\n  :global(.HelpText__label > *) {\n    margin: 0;\n    padding: 0;\n  }\n\n  .HelpText__label:not(:first-child) {\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n\n  .HelpText__body {\n    margin: 1em 0;\n    border: solid 1px #069;\n    padding: 1em;\n    background-color: #d0e1f1;\n  }\n\n  :global(.HelpText__body > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n\n  :global(.HelpText__body > *:last-child) {\n    margin: 0;\n  }\n</style>\n\n<script>\n  import Flex from '../Flex.svelte';\n\n  export let label = 'label';\n  export let open = false;\n  export let icon = {\n    collapse: '–',\n    expand: '+',\n    position: 'left'\n  };\n\n  // Enforce icon defaults\n  if (!icon.collapse) {\n    icon.collapse = '–';\n  }\n\n  if (!icon.expand) {\n    icon.expand = '+';\n  }\n\n  if (!icon.position) {\n    icon.position = 'left';\n  }\n\n  $: iconValue = open ? icon.collapse : icon.expand;\n</script>\n",
    "<Fieldset id=\"{id}\" legend={label} {...$$restProps}>\n\n  <ol class=\"MultipleChoice__options{columns ? '--columns' : ''}\">\n    {#each options as option, index (option)}\n      <li class=\"MultipleChoice__option\">\n        <!-- type attribute cant be dynamic with bind:group -->\n        {#if type === CHECKBOX}\n          <input\n            id=\"{`${id}_${index}`}\"\n            class=\"MultipleChoice__option__input\"\n            type=\"checkbox\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {:else if type === RADIO}\n          <input\n            id=\"{`${id}_${index}`}\"\n            class=\"MultipleChoice__option__input\"\n            type=\"radio\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {/if}\n        <label class=\"MultipleChoice__option__label\" for=\"{`${id}_${index}`}\">{option.title || option}</label>\n      </li>\n    {/each}\n  </ol>\n\n  {#if editable}\n    <AddOther label=\"Add other {label}\" on:ADD=\"{handleOptionAdd}\">\n      <Input id=\"{id}__other\" label=\"Other {label}\" />\n    </AddOther>\n  {/if}\n</Fieldset>\n\n<style>\n  .MultipleChoice__option__label,\n  .MultipleChoice__option__input {\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  .MultipleChoice__option__input {\n    flex-grow: 0;\n    flex-shrink: 0;\n    width: 1em;\n    height: 1em;\n  }\n\n  .MultipleChoice__option__label {\n    margin-left: 0.5em;\n    flex-grow: 0;\n    flex-shrink: 1;\n    word-break: break-word;\n  }\n\n  .MultipleChoice__option__input:focus,\n  .MultipleChoice__option__input:hover {\n    outline: 2px solid currentColor;\n    outline-offset: 2px;\n  }\n\n  .MultipleChoice__options,\n  .MultipleChoice__options--columns {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .MultipleChoice__options--columns {\n    columns: 4 10em;\n    column-gap: 2em;\n  }\n\n  .MultipleChoice__option {\n    break-inside: avoid-column;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n</style>\n\n<script context=\"module\">\n  const CHECKBOX = 'checkbox';\n  const RADIO = 'radio';\n</script>\n\n<script>\n  import AddOther from './AddOther.svelte';\n  import Fieldset from './Fieldset.svelte';\n  import Input from './Input.svelte';\n\n  export let id;\n  export let label;\n  export let type = CHECKBOX;\n  export let options = [];\n  export let columns = false;\n  export let editable = false;\n  export let value = [];\n\n  function handleOptionAdd(event) {\n\n    const newValue = event.detail.join();\n\n    if (!newValue) {\n      return;\n    }\n\n    const newOption = {\n      title: event.detail.join()\n      // checked: true\n    };\n\n    if (!options.some((option) => option.title === newOption.title)) {\n      options = [...options, newOption];\n      value = [...value, newOption.title];\n    }\n  }\n</script>\n",
    "<!--\n * @component\n * LanguageSelect\n * -->\n<div class=\"LanguageSelect\">\n  {#if !collapsed}\n    <span class=\"LanguageSelect__languages_container languagelist\">\n      <strong\n        id=\"LanguageSelect__label\"\n      >{$translate('LANGUAGE_SELECT_LABEL')}:</strong>\n      <ul\n        class=\"LanguageSelect__languages languagelistul\"\n        on:click=\"{handleClick}\"\n      >\n        {#each locales as appLocale}\n          <li\n            class=\"LanguageSelect__language {appLocale === currentLocale ? 'language__item--current' : ''}\"\n          >\n            {#if appLocale === currentLocale}\n              <strong>{currentLocale.title}</strong>\n            {:else}\n              <a\n                lang=\"{appLocale.lang}\"\n                href=\"#{appLocale.lang}\"\n              >{appLocale.title}</a>\n            {/if}\n          </li>\n        {/each}\n      </ul>\n    </span>\n  {/if}\n  <span class=\"LanguageSelect__toggle\">\n    <button\n      id=\"showoptions\"\n      on:click=\"{handleToggle}\"\n      type=\"button\"\n      class=\"button-inline showhidebutton\"\n      aria-expanded=\"{!collapsed}\"\n    >\n      <svg aria-hidden=\"true\" class=\"icon-languages\"><use\n          xlink:href=\"images/icons.svg#icon-languages\"\n        ></use></svg>\n      <span>\n        {collapsed ? 'Show' : 'Hide'}\n        {$translate('LANGUAGE_SELECT_BUTTON')}\n      </span>\n    </button>\n  </span>\n</div>\n<!-- /component -->\n\n<style>\n  .LanguageSelect {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-end;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  .LanguageSelect > *:not(:first-child) {\n    margin-left: 0.5rem;\n    padding-left: 0.5rem;\n    border-left: solid 1px var(--w3c-classic);\n  }\n</style>\n\n<script>\n  import { t as translate, locale } from 'svelte-i18n';\n\n  export let locales = [];\n\n  let collapsed = false;\n\n  $: currentLocale = locales.find((l) => l.lang === $locale);\n\n  /**\n   * Handle the languageSelect click,\n   * Changing to target language\n   * @param  {[object]} event\n   * @return {undefined}\n   */\n  function handleClick(event) {\n    const target = event.target;\n\n    if (\n      target.nodeName === 'A' &&\n      locales.some((l) => l.lang === target.lang)\n    ) {\n      event.preventDefault();\n\n      // This line is what makes the App translate to another language\n      locale.set(target.lang);\n    }\n  }\n\n  function handleToggle(event) {\n    collapsed = !collapsed;\n  }\n</script>\n",
    "<!-- @Layout:Base -->\n\n<div class=\"Controls\">\n  <Grid>\n    <GridItem area=\"full\">\n      <LanguageSelect locales=\"{appData.locales}\" />\n    </GridItem>\n  </Grid>\n</div>\n\n<div id=\"site-header\" style=\"padding: 0;\">\n  <Grid>\n    <GridItem area=\"full\">\n      <Header />\n    </GridItem>\n  </Grid>\n</div>\n<NavigationBar />\n\n<div class=\"BaseLayout\">\n  <Grid>\n    <GridItem area=\"{panelIsOpen ? 'content' : 'full'}\" row=\"1\">\n      <slot />\n\n      <Pager label=\"step\" context=\"{routes}\" />\n    </GridItem>\n\n    {#if hasPanel}\n      <GridItem area=\"right\" row=\"1\">\n        <Panel title=\"Your report\" bind:open=\"{panelIsOpen}\">\n          <!--\n           * @note\n           * Panel slotted stuff is layout/page dependend\n           * We should try to think of a way to achieve this.\n           * e.g. in Context / store state\n           * -->\n\n          <!-- State based; is there an open Evaluation? -->\n          <Link class=\"button\" to=\"/evaluation/view-report\">View report</Link>\n          <Button type=\"secondary\" on:click=\"{handleNewEvaluationClick}\">\n            Start new Evaluation\n          </Button>\n          <OpenEvaluation />\n          <Button type=\"secondary\">Import findings</Button>\n        </Panel>\n      </GridItem>\n    {/if}\n  </Grid>\n</div>\n<!-- /@Layout -->\n\n<style>\n  .BaseLayout {\n    padding: 2em 1em;\n  }\n\n  .Controls {\n    font-size: 0.8125em;\n  }\n\n  @media (min-width: 60em) {\n    .BaseLayout {\n      padding: 2em 0;\n    }\n  }\n</style>\n\n<script>\n  import { getContext } from 'svelte';\n  import { useNavigate, useLocation, Link } from 'svelte-navigator';\n\n  import evaluationStore from '../../data/stores/evaluationStore.js';\n  import appData from '../../data/app.js';\n\n  import Button from '../Button.svelte';\n  import OpenEvaluation from '../formcomponents/OpenEvaluation.svelte';\n  import Grid from '../Grid.svelte';\n  import GridItem from '../GridItem.svelte';\n  import Header from '../Header.svelte';\n  import LanguageSelect from '../i18n/LanguageSelect.svelte';\n  import NavigationBar from '../NavigationBar.svelte';\n  import Pager from '../Pager.svelte';\n  import Panel from '../Panel.svelte';\n\n  const { translate } = getContext('app');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  $: hasPanel = $location.pathname !== '/evaluation/view-report';\n\n  // Move to appStore -> $routes(derived)\n  let routes = [\n    {\n      title: $translate('UI.NAV.STEP_START'),\n      path: '/'\n    },\n    {\n      title: $translate('UI.NAV.STEP_SCOPE'),\n      path: '/evaluation/scope'\n    },\n    {\n      title: $translate('UI.NAV.STEP_EXPLORE'),\n      path: '/evaluation/explore'\n    },\n    {\n      title: $translate('UI.NAV.STEP_SAMPLE'),\n      path: '/evaluation/sample'\n    },\n    {\n      title: $translate('UI.NAV.STEP_AUDIT'),\n      path: '/evaluation/audit'\n    },\n    {\n      title: $translate('UI.NAV.STEP_REPORT'),\n      path: '/evaluation/summary'\n    },\n    {\n      title: $translate('UI.NAV.STEP_VIEWREPORT'),\n      path: '/evaluation/view-report'\n    }\n  ];\n\n  $: panelIsOpen = hasPanel;\n\n  function handleNewEvaluationClick() {\n    $evaluationStore.reset();\n    navigate('/evaluation/scope', { replace: true });\n  }\n</script>\n"
  ],
  "names": [],
  "mappings": "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"
}