{
  "version": 3,
  "file": "app.css",
  "sources": [
    "Auditor.svelte",
    "Details.svelte",
    "Header.svelte",
    "NavigationBar.svelte",
    "Page.svelte",
    "Pager.svelte",
    "Panel.svelte",
    "ResourceLink.svelte",
    "AddOther.svelte",
    "Assertion.svelte",
    "CheckboxGroup.svelte",
    "Field.svelte",
    "MultipleChoice.svelte",
    "SampleInput.svelte",
    "LanguageSelect.svelte",
    "BaseLayout.svelte"
  ],
  "sourcesContent": [
    "<div class=\"Auditor\">\n\n  <div class=\"Auditor__Filter box\">\n    <header>\n      {$translate('UI.AUDITOR.FILTER_TITLE', {default: 'Filter findings by'})}\n    </header>\n    <div class=\"Auditor__Filters\">\n\n      <MultipleChoice\n        id=\"filter_wcag_version\"\n        label=\"Criterion WCAG Version\"\n        options={[\n          'WCAG 2.0',\n          'WCAG 2.1',\n          'WCAG 2.2'\n        ]}\n      />\n\n      <MultipleChoice\n        id=\"filter_conformance_level\"\n        label=\"Criterion conformance level\"\n        options={[\n          'Level A',\n          'Level AA',\n          'Level AAA'\n        ]}\n      />\n\n    </div>\n  </div>\n\n  {#if assertions.length > 0}\n    <ul class=\"Auditor__Assertions\">\n      {#each assertions as assertion}\n        <li class=\"Auditor__Assertion\">\n          <Assertion {...assertion} />\n        </li>\n      {/each}\n    </ul>\n  {:else}\n    <p>Nothing found add something.</p>\n  {/if}\n</div>\n\n<style>\n  .Auditor__Assertions {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n\n  .Auditor__Assertion:not(:last-child) {\n    margin-bottom: 3em;\n  }\n</style>\n\n<script>\n  import {t as translate} from 'svelte-i18n';\n\n  import WCAG21 from '../data/wcag/WCAG21.json';\n  import Assertion from './formcomponents/Assertion.svelte';\n  import MultipleChoice from './formcomponents/MultipleChoice.svelte';\n\n  // Quick data, needs to come from context/store\n  let assertions = WCAG21;\n</script>\n",
    "<!--\n * @component\n * Details\n * @property label <String|@html>\n * @slot Detail contents\n * -->\n<details class=\"Details\" open={open}>\n  <summary class=\"Details__label\">\n    {@html label}\n  </summary>\n\n  <div class=\"Details__body\">\n    <slot />\n  </div>\n</details>\n\n<style>\n  .Details {\n    padding: 0;\n  }\n\n  .Details__label {\n    display: flex;\n    align-items: flex-start;\n    align-items: baseline;\n    justify-content: flex-start;\n    padding: 0;\n    font-size: 1em;\n    line-height: 1.5;\n    list-style: none;\n    cursor: pointer;\n  }\n\n  :global(.Details__label::-webkit-details-marker) {\n    display: none;\n  }\n\n  :global(.Details__label > :first-child::before) {\n    content: none !important;\n  }\n\n  .Details__label::before {\n    flex-grow: 0;\n    flex-shrink: 0;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    content: \"\";\n    margin-right: 0.5em;\n    border: 2px solid currentColor;\n    border-radius: 3px;\n    padding: 0.125em;\n    width: 1em;\n    height: 1em;\n    color: inherit;\n    color: var(--wai-green);\n    background-color: inherit;\n    font-weight: bold;\n    line-height: 1em;\n  }\n\n  .Details__label:focus::before,\n  .Details__label:hover::before {\n    color: white;\n    background-color: #333;\n    background-color: var(--w3c-blue);\n    border-color: #333;\n    border-color: var(--w3c-blue);\n  }\n\n  .Details[open] > .Details__label::before {\n    content: \"â€“\";\n  }\n\n  .Details:not([open]) > .Details__label::before {\n    content: \"+\";\n  }\n\n  /* Take control of child spacing */\n  :global(.Details__label > *) {\n    margin: 0;\n    padding: 0;\n  }\n\n  .Details__body {\n    margin-top: 1em;\n    padding-left: 2em;\n  }\n\n  :global(.Details__body > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n\n  :global(.Details__body > *:last-child) {\n    margin: 0;\n  }\n</style>\n\n<script>\n  export let label = 'label';\n  export let open = false;\n</script>\n",
    "<!-- @component:Header -->\n<header class=\"tool-header\">\n  <div class=\"tool-header-name\">\n    WCAG-EM R<span class=\"display-phablet\">eport </span>T<span class=\"display-phablet\">ool</span>\n  </div>\n  <Branding />\n</header>\n<!-- /@component -->\n\n<style>\n  header {\n    grid-row: 2;\n    grid-column: 2 / 10;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  header > * {\n    flex-shrink: 0;\n    flex-grow: 1;\n  }\n\n  .tool-header {\n    color: white;\n    background-color: var(--w3c-classic);\n  }\n</style>\n\n<script>\n  import Branding from './Branding.svelte';\n</script>\n",
    "<!--\n * @component\n * <Navigation>\n *  -->\n<nav class=\"Nav default-grid\">\n  <ol class=\"Nav__Itemcontainer\">\n    {#each navigationItems as navigationItem}\n      <li\n        class=\"nav__item\"\n        class:current=\"{navigationItem.path === currentPath}\"\n      >\n        <Link to=\"{navigationItem.path}\">{navigationItem.title}</Link>\n      </li>\n    {/each}\n  </ol>\n</nav>\n<!-- </Nav> -->\n\n<style>\n  .Nav {\n    background-color: #d0e1f1;\n    background-color: var(--cloudy-subtle);\n  }\n\n  .Nav__Itemcontainer {\n    grid-column: 2 / 10;\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow-x: auto;\n  }\n\n  .nav__item {\n    padding: 0.25em;\n  }\n\n  .nav__item.current {\n    background-color: #fff;\n  }\n\n  @media (min-width: 40.1em) {\n    .Nav__Itemcontainer {\n      flex-direction: row;\n    }\n  }\n</style>\n\n<script>\n  import { Link, useLocation } from 'svelte-navigator';\n\n  let navigationItems = [\n    {\n      path: '/',\n      title: 'Overview'\n    },\n    {\n      path: '/evaluation/scope',\n      title: '1. Scope'\n    },\n    {\n      path: '/evaluation/explore',\n      title: '2. Explore'\n    },\n    {\n      path: '/evaluation/sample',\n      title: '3. Sample'\n    },\n    {\n      path: '/evaluation/audit',\n      title: '4. Audit'\n    },\n    {\n      path: '/evaluation/summary',\n      title: '5. Summary'\n    },\n    {\n      path: '/evaluation/view-report',\n      title: 'View report'\n    }\n  ];\n\n  const location = useLocation();\n\n  $: currentPath = $location.pathname;\n</script>\n",
    "<svelte:head>\n  <title>{title}</title>\n</svelte:head>\n\n<main>\n  <h1>{title}</h1>\n  <slot />\n</main>\n\n<style>\n  main {\n    grid-column: 2 / span 5;\n    grid-row: 1;\n  }\n\n  :global(main > *:not(:last-child)) {\n    margin-bottom: 1em;\n  }\n</style>\n\n<script>\n  export let title;\n</script>\n",
    "<!--\n * @component\n * Pager\n * -->\n<aside class=\"pager\">\n  <ul>\n    {#if previousPage}\n      <li class=\"pager--item previous\">\n        <Link to=\"{previousPage.path}\">\n          <svg aria-hidden=\"true\" class=\"pager--item-icon icon-arrow-left\"><use\n              xlink:href=\"images/icons.svg#icon-arrow-left\"\n            ></use></svg>\n          <span class=\"pager--item-text\">\n            <span class=\"pager--item-text-direction\">Previous {label}</span>\n            <span class=\"pager--item-text-target\">{$translate(previousPage.title)}</span>\n          </span>\n        </Link>\n      </li>\n    {/if}\n\n    {#if nextPage}\n      <li class=\"pager--item next\">\n        <Link to=\"{nextPage.path}\">\n          <svg aria-hidden=\"true\" class=\"pager--item-icon icon-arrow-right\"><use\n              xlink:href=\"images/icons.svg#icon-arrow-right\"\n            ></use></svg>\n          <span class=\"pager--item-text\">\n            <span class=\"pager--item-text-direction\">Next {label}</span>\n            <span class=\"pager--item-text-target\">{$translate(nextPage.title)}</span>\n          </span>\n        </Link>\n      </li>\n    {/if}\n  </ul>\n</aside>\n<!-- /component -->\n\n<style>\n  .pager {\n    grid-row: 2;\n    grid-column: 2 / span 5;\n  }\n\n  .pager--item-text {\n    margin: 0 0.5em;\n  }\n\n  .next {\n    text-align: right;\n  }\n</style>\n\n<script>\n  import { t as translate } from 'svelte-i18n';\n  import { Link, useLocation } from 'svelte-navigator';\n\n  export let label = 'page';\n  export let context = [];\n\n  let indexedContext = context.map((page, index) => {\n    return {\n      path: page.path || '/',\n      title: page.title || '',\n      index\n    };\n  });\n\n  let pageCount = indexedContext.length;\n  let location = useLocation();\n\n  $: currentPage = indexedContext.find((page) => page.path === $location.pathname);\n  $: currentPageIndex = currentPage ? currentPage.index : null;\n\n  $: previousPage = currentPageIndex > 0 && indexedContext[currentPageIndex - 1];\n  $: nextPage = currentPageIndex < pageCount - 1 && indexedContext[currentPageIndex + 1];\n</script>\n",
    "<aside\n  class=\"Panel\"\n  class:hidden\n>\n  <header class=\"Panel__Header\">\n    {#if title}\n      <h2 class=\"Panel__Header__heading\">{title}</h2>\n    {/if}\n    <button\n      type=\"button\"\n      class=\"Panel__Toggle button-small showhidebutton\"\n      on:click=\"{handleToggleClick}\"\n      bind:this=\"{Panel__Toggle}\"\n    >{hidden ? `Show ${title}` : 'Hide'}</button>\n  </header>\n\n  <div class=\"Panel__Body\" bind:this=\"{Panel_Body}\">\n    <slot>\n      <p>Panel body</p>\n    </slot>\n  </div>\n</aside>\n\n<style>\n  .Panel {\n    box-sizing: border-box;\n    -ms-grid-column: 7;\n    -ms-grid-column-span: 3;\n    grid-column: 7 / span 3;\n    -ms-grid-row: 1;\n    grid-row-start: 1;\n    align-self: flex-start;\n\n    outline: none;\n    border: 1px solid var(--line-grey);\n    padding: 1em;\n    width: 100%;\n    background-color: var(--footer-grey);\n    box-shadow: 0px 2px 8px -7px #000;\n  }\n\n  .Panel.hidden {\n    width: auto;\n    padding: 1em;\n    border: none;\n    background-color: transparent;\n    box-shadow: none;\n  }\n\n  @media (min-width: 60em) {\n    .Panel {\n      position: sticky;\n      top: 1em;\n    }\n  }\n  .Panel__Header {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    border-bottom: 1px solid var(--line-grey);\n    margin-bottom: 1em;\n  }\n\n  .Panel.hidden > .Panel__Header {\n    border-bottom-color: transparent;\n  }\n\n  .Panel__Header__heading {\n    margin: 0;\n    margin-right: 1em;\n    border-bottom: none;\n    font-size: 1em;\n    line-height: 1.5;\n    font-weight: bold;\n  }\n\n  .Panel.hidden .Panel__Header__heading {\n    display: none;\n  }\n\n  .Panel:not(.hidden) > .Panel__Body {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n  }\n\n  :global(.Panel__Body > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n\n  :global(.Panel__Body > :last-child) {\n    margin-bottom: 0;\n  }\n\n  .Panel__Toggle {\n    flex-shrink: 0;\n    margin-left: auto;\n    padding: 0.25em;\n    cursor: pointer;\n    word-wrap: break-word;\n  }\n\n  .Panel.hidden .Panel__Toggle {\n    flex-shrink: 1;\n  }\n\n  .showhidebutton::after {\n    /* Corrections */\n    margin-left: 0.5em;\n  }\n</style>\n\n<script>\n  export let title = null;\n\n  let Panel_Body;\n  let Panel__Toggle;\n\n  $: hidden = Panel_Body ? Panel_Body.hidden : true;\n\n  function handleToggleClick() {\n    let toggleTo = !hidden;\n\n    Panel_Body.hidden = toggleTo;\n    Panel__Toggle.setAttribute('aria-expanded', !toggleTo);\n  }\n</script>\n",
    "<a\n  href=\"{href}\"\n  class=\"link-to-guidance button button-small button-secondary\"\n  target=\"_blank\"\n  rel=\"noopener roreferrer\"\n>\n  <svg aria-hidden=\"true\" class=\"icon-info\"><use\n      xlink:href=\"images/icons.svg#icon-info\"\n    ></use></svg>\n  <span>\n    <slot />\n  </span>\n</a>\n\n<style>\n  .link-to-guidance {\n    border-width: 1px;\n    font-weight: normal;\n    color: var(--dk-grey);\n    border-color: var(--line-grey);\n    vertical-align: middle;\n    margin: 2px 0;\n  }\n  .link-to-guidance:hover,\n  .link-to-guidance:focus {\n    color: var(--off-black);\n    background-color: var(--off-white);\n  }\n  .link-to-guidance svg {\n    margin-right: 0.25em;\n  }\n</style>\n\n<script>\n  export let href;\n</script>\n",
    "<!--\n * @component\n * ListInput\n * A customizable forminput that receives\n * a value as array with either a string or an object.\n * a format of how to add a list item which is\n * an array of objects containing:\n * - required label\n * - required type; text | textarea | select | checkbox(group)\n * - optional helptext\n * - optional ...any; required props to pass on to specific formcomponents\n *\n * -->\n<div class=\"AddOther__container\">\n  <div\n    class=\"AddOther__Inputs\"\n    bind:this=\"{otherInputsContainer}\"\n    on:keydown=\"{handleAddKeydown}\"\n  >\n    <slot />\n  </div>\n  <Button type=\"secondary\" on:click=\"{handleAddClick}\">{label}</Button>\n</div>\n\n<style>\n  :global(.AddOther__Inputs > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n  :global(.AddOther__Inputs > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  import Button from '../Button.svelte';\n\n  export let label = 'Add';\n\n  const dispatch = createEventDispatcher();\n\n  let otherInputsContainer;\n  let otherInputs;\n\n  onMount(() => {\n    otherInputs = Array.from(\n      otherInputsContainer.querySelectorAll('input, select, textarea')\n    );\n  });\n\n  function handleAddKeydown(event) {\n    if (event.key.toLowerCase() === 'enter') {\n      event.preventDefault();\n\n      dispatchAdd();\n    }\n  }\n\n  function handleAddClick(event) {\n    event.preventDefault();\n    dispatchAdd();\n  }\n\n  function dispatchAdd() {\n    // At least one input should have data\n    if (!otherInputs.some((input) => input.value !== '')) {\n      return;\n    }\n\n    const detail = otherInputs.map((input) => {\n      return input.value;\n    });\n\n    // Clear fields\n    otherInputs.forEach((input) => {\n      input.value = '';\n    });\n\n    otherInputs[0].focus();\n\n    dispatch('ADD', detail);\n  }\n</script>\n",
    "<!--\n * @component\n * Assertion\n * -->\n<div class=\"Assertion\">\n  <header class=\"Assertion__Header\">\n    <h3 class=\"Assertion__Header__heading\">\n      {num}: {$translate(`WCAG.WCAG21.${num}.TITLE`)}\n    </h3>\n    <span class=\"Assertion__Header__level\">(Level {conformanceLevel})</span>\n  </header>\n\n  <Details label={`details <span class=\"visuallyhidden\">for ${$translate(`WCAG.WCAG21.${num}.TITLE`)}</span>`}>\n    <div>{$translate(`WCAG.WCAG21.${num}.DESCRIPTION`)}</div>\n\n    {#if details}\n      <dl>\n        {#each details as detail}\n          <dt>{$translate(`${detail}.TITLE`)}</dt>\n          <dd>\n            <p>\n              {$translate(`${detail}.DESCRIPTION`)}\n            </p>\n          </dd>\n        {/each}\n      </dl>\n    {/if}\n\n    {#if notes}\n      <div>\n        <span>test.description.notes</span>\n        <ol>\n          {#each notes as note}\n            <li>\n              <p class=\"note\"><span>Note:</span> <span>{note}</span></p>\n            </li>\n          {/each}\n        </ol>\n      </div>\n    {/if}\n\n    <div class=\"\">\n      <ResourceLink href=\"https://www.w3.org/WAI/WCAG21/Understanding/{$translate(`WCAG.WCAG21.${num}.ID`)}.html\">Understanding {num}</ResourceLink>\n      <ResourceLink href=\"https://www.w3.org/WAI/WCAG21/quickref/#{$translate(`WCAG.WCAG21.${num}.ID`)}\">How to meet {num}</ResourceLink>\n    </div>\n  </Details>\n\n  <fieldset class=\"Assertion__Result__container\">\n    <legend class=\"Assertion__Subject\">\n      Result for: <a\n        href=\"subject.url\"\n        target=\"_blank\"\n      >{'subject.title' || 'subject.url'}</a> (<span>subject.type?</span>)\n    </legend>\n\n    <div class=\"Assertion__Result\">\n      <Select id=\"Result__Outcome\" label=\"Outcome\" options=\"{outcomeOptions}\" />\n\n      <Textarea id=\"Result__Description\" label=\"Description\" />\n    </div>\n  </fieldset>\n</div>\n<!-- /component -->\n\n<style>\n  .Assertion {\n    background-color: var(--pure-white);\n    border: 1px solid var(--line-grey);\n    box-shadow: 1px 1px 4px -4px #000;\n    padding: 1em;\n  }\n\n  :global(.Assertion > *:not(:last-child)) {\n    margin-bottom: 1em;\n  }\n\n  :global(.Assertion > *:last-child) {\n    margin-bottom: 0;\n  }\n\n  .Assertion__Header {\n    margin-bottom: 1em;\n    font-size: 1em;\n    line-height: 1.5em;\n  }\n\n  .Assertion__Header > * {\n    margin: 0;\n    padding: 0;\n    font-size: inherit;\n    line-height: inherit;\n  }\n\n  .Assertion__Header__heading {\n    font-size: 1.25em;\n    font-weight: normal;\n  }\n  .Assertion__Header__level {\n    font-style: normal;\n    vertical-align: middle;\n    white-space: nowrap;\n  }\n\n  .Assertion__Result__container {\n    display: block;\n    border: none;\n    padding-left: 2em;\n  }\n\n  :global(.Assertion__Result__container > *:not(:last-child)) {\n    margin-bottom: 1em;\n  }\n\n  .Assertion__Subject {\n    margin-left: -2em;\n    padding: 0;\n    font-size: 1em;\n  }\n\n  .Assertion__Result {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-between;\n    width: auto;\n    min-inline-size: 5em;\n  }\n\n  /* use :global for children as they are in different components */\n  :global(.Assertion__Result label::after) {\n    content: ':';\n  }\n\n  :global(.Assertion__Result > *:not(:last-child)) {\n    flex: 1;\n    margin-bottom: 1em;\n  }\n\n  :global(.Assertion__Result > :last-child) {\n    flex: 3;\n  }\n\n  :global(.Assertion__Result textarea) {\n    width: 100%;\n    font-family: 'Noto Sans Mono', monospace;\n  }\n\n  @media (min-width: 40rem) {\n    .Assertion__Result {\n      flex-direction: row;\n    }\n\n    :global(.Assertion__Result > *:not(:last-child)) {\n      margin-bottom: 0;\n      margin-right: 2em;\n    }\n  }\n</style>\n\n<script>\n  import { t as translate, dictionary, locale } from 'svelte-i18n';\n\n  import Details from '../Details.svelte';\n  import ResourceLink from '../ResourceLink.svelte';\n\n  import Select from './Select.svelte';\n  import Textarea from './Textarea.svelte';\n\n  export let num;\n  export let conformanceLevel;\n\n  // Dynamicly get the amount of details from the dictionairy\n  let details = Object.keys($dictionary[`${$locale}`]).filter((key) => {\n    return (\n      key.indexOf(`WCAG.WCAG21.${num}.DETAILS`) >= 0\n      && key.indexOf('TITLE') >= 0\n    );\n  }).map(key => key.replace('.TITLE', ''));\n  let notes;\n\n  $: outcomeOptions = [\n    {\n      title: $translate('UI.EARL.PASSED')\n    },\n    {\n      title: $translate('UI.EARL.FAILED')\n    },\n    {\n      title: $translate('UI.EARL.CANT_TELL')\n    },\n    {\n      title: $translate('UI.EARL.NOT_PRESENT')\n    },\n    {\n      title: $translate('UI.EARL.NOT_CHECKED'),\n      selected: true\n    }\n  ];\n</script>\n",
    "<fieldset id=\"{id}\" class=\"CheckboxGroup field\">\n  <legend>{label}</legend>\n\n  <ol>\n    {#each options as option, index (option)}\n      <li>\n        <input\n          id=\"{`${id}_${index}`}\"\n          type=\"checkbox\"\n          value=\"{option.value || option.title || option}\"\n          checked=\"{option.checked}\"\n          name=\"{label}\"\n          bind:group={value}\n          on:change\n        />\n        <label for=\"{`${id}_${index}`}\">{option.title || option}</label>\n      </li>\n    {/each}\n  </ol>\n\n  {#if editable}\n    <AddOther label=\"Add other {label}\" on:ADD=\"{handleCheckboxAdd}\">\n      <Input id=\"{id}__other\" label=\"Other {label}\" />\n    </AddOther>\n  {/if}\n</fieldset>\n\n<style>\n  label,\n  input {\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  input:focus,\n  input:hover {\n    outline: 2px solid currentColor;\n    outline-offset: 2px;\n  }\n\n  ol {\n    columns: 4 10em;\n    column-gap: 2em;\n  }\n</style>\n\n<script>\n  import { createEventDispatcher } from 'svelte';\n\n  import AddOther from './AddOther.svelte';\n  import Input from './Input.svelte';\n\n  export let id;\n  export let label;\n  export let options = [];\n  export let editable = false;\n\n  const dispatch = createEventDispatcher();\n\n  function handleCheckboxAdd(event) {\n    const newOption = {\n      title: event.detail.join(),\n      // checked: true\n    };\n\n    if (!options.some(option => option.title === newOption.title)) {\n      options = [...options, newOption];\n      value = [...value, newOption.title];\n\n      dispatch('change', value);\n    }\n  }\n</script>\n\n<script context=\"module\">\n  let value = [];\n\n  export function getValue() {\n    return value;\n  }\n</script>\n",
    "<div class=\"Field field\">\n  {#if helptext}\n    <Details label={label && `<label for=\"${id}\">${label}</label>`}>\n      {@html helptext}\n    </Details>\n  {:else if label}\n    <label for=\"{id}\">{label}</label>\n  {/if}\n\n  <slot/>\n</div>\n\n<style>\n  .Field {\n    padding: 0;\n  }\n\n  :global(.Field > *:not(:last-child)) {\n    margin-bottom: 0.5em;\n  }\n\n  :global(.Field label) {\n    font-weight: bold;\n  }\n</style>\n\n<script>\n  import Details from '../Details.svelte';\n\n  export let id;\n  export let label;\n  export let helptext;\n</script>\n",
    "<fieldset id=\"{id}\" class=\"MultipleChoice field\">\n  <legend>{label}</legend>\n\n  <ol>\n    {#each options as option, index (option)}\n      <li>\n        {#if type === CHECKBOX}\n          <input\n            id=\"{`${id}_${index}`}\"\n            type=\"checkbox\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {:else if type === RADIO}\n          <input\n            id=\"{`${id}_${index}`}\"\n            type=\"radio\"\n            value=\"{option.value || option.title || option}\"\n            checked=\"{option.checked}\"\n            name=\"{label}\"\n            bind:group=\"{value}\"\n            on:change\n          />\n        {/if}\n        <label for=\"{`${id}_${index}`}\">{option.title || option}</label>\n      </li>\n    {/each}\n  </ol>\n\n  {#if editable}\n    <AddOther label=\"Add other {label}\" on:ADD=\"{handleCheckboxAdd}\">\n      <Input id=\"{id}__other\" label=\"Other {label}\" />\n    </AddOther>\n  {/if}\n</fieldset>\n\n<style>\n  label,\n  input {\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  input:focus,\n  input:hover {\n    outline: 2px solid currentColor;\n    outline-offset: 2px;\n  }\n</style>\n\n<script context=\"module\">\n  const CHECKBOX = 'checkbox';\n  const RADIO = 'radio';\n  let value = [];\n\n  export function getValue() {\n    return value;\n  }\n</script>\n\n<script>\n  import { createEventDispatcher } from 'svelte';\n\n  import AddOther from './AddOther.svelte';\n  import Input from './Input.svelte';\n\n  export let id;\n  export let label;\n  export let type = CHECKBOX;\n  export let options = [];\n  export let editable = false;\n\n  const dispatch = createEventDispatcher();\n\n  function handleCheckboxAdd(event) {\n    const newOption = {\n      title: event.detail.join()\n      // checked: true\n    };\n\n    if (!options.some((option) => option.title === newOption.title)) {\n      options = [...options, newOption];\n      value = [...value, newOption.title];\n\n      dispatch('change', value);\n    }\n  }\n</script>\n",
    "<!--\n * @component\n * SampleInput\n * A customizable forminput that receives\n * a value as array with either a string or an object.\n * a format of how to add a list item which is\n * an array of objects containing:\n * - required label\n * - required type; text | textarea | select | checkbox(group)\n * - optional helptext\n * - optional ...any; required props to pass on to specific formcomponents\n * -->\n<fieldset id=\"{id}\">\n  <legend>{label}</legend>\n  {#if helptext}\n    <Details label=\"Info\">\n      {@html helptext}\n    </Details>\n  {/if}\n\n  <slot />\n\n  <div id=\"{id}--value\" class=\"ListInput--value\" bind:this=\"{valueContainer}\">\n    {#if value.length > 0}\n      <ol title=\"{label}\">\n        {#each value as item}\n          <li>\n            {#if item.href !== ''}\n              <a\n                href=\"{item.href}\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >{#if item.title !== ''}{item.title}{:else}{item.href}{/if}</a> ({item.href})\n            {:else}\n              {item.title}\n            {/if}\n          </li>\n        {/each}\n      </ol>\n    {:else}\n      <p><em>{$translate('PAGES.SAMPLE.NO_PAGES_DEFINED')}</em></p>\n    {/if}\n  </div>\n\n  <AddOther\n    label=\"{$translate('PAGES.SAMPLE.BTN_ADD_PAGE')}\"\n    on:ADD=\"{handleAdd}\"\n  >\n    <Input id=\"{id}__name\" label=\"{$translate('PAGES.SAMPLE.LABEL_HANDLE')}\" />\n    <Input id=\"{id}__href\" label=\"{$translate('PAGES.SAMPLE.LABEL_PAGE')}\" />\n  </AddOther>\n</fieldset>\n\n<style>\n  :global(.AddItem > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n  :global(.AddItem > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script>\n  import { t as translate } from 'svelte-i18n';\n\n  import AddOther from './AddOther.svelte';\n  import Details from '../Details.svelte';\n  import Input from './Input.svelte';\n\n  export let id;\n  export let label;\n  export let helptext;\n  export let value = [];\n\n  let valueContainer;\n\n  function handleAdd(event) {\n    const newSample = {\n      title: event.detail[0],\n      href: event.detail[1]\n    };\n\n    if (event.detail !== value) {\n      value = [...value, newSample];\n    }\n  }\n</script>\n",
    "<!--\n * @component\n * LanguageSelect\n * -->\n<div class=\"LanguageSelect languagelist\">\n  <svg aria-hidden=\"true\" class=\"icon-languages\"><use\n      xlink:href=\"images/icons.svg#icon-languages\"\n    ></use></svg><strong\n    id=\"LanguageSelect__label\"\n  >{$translate('LANGUAGE_SELECT_LABEL')}:</strong>\n  <ul class=\"languagelistul\" on:click=\"{handleClick}\">\n    {#each locales as appLocale}\n      <li\n        class=\"language__item {appLocale === currentLocale ? 'language__item--current' : ''}\"\n      >\n        {#if appLocale === currentLocale}\n          <strong>{currentLocale.title}</strong>\n        {:else}\n          <a\n            lang=\"{appLocale.lang}\"\n            href=\"#{appLocale.lang}\"\n          >{appLocale.title}</a>\n        {/if}\n      </li>\n    {/each}\n  </ul>\n</div>\n<!-- /component -->\n\n<style>\n  .LanguageSelect {\n    grid-column: 2 / 10;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    margin: 0;\n    padding: 0.5em 0;\n    list-style-type: none;\n}\n\n  .language__item {\n    margin: 0 0.25em;\n    min-width: 3rem;\n  }\n\n  .language__item--current > a {\n    text-decoration: underline;\n    font-weight: bold;\n  }\n</style>\n\n<script>\n  import { t as translate, locale } from 'svelte-i18n';\n\n  export let locales = [];\n\n  $: currentLocale = locales.find((l) => l.lang === $locale);\n\n  /**\n   * Handle the languageSelect click,\n   * Changing to target language\n   * @param  {[object]} event\n   * @return {undefined}\n   */\n  function handleClick(event) {\n    const target = event.target;\n\n    if (\n      target.nodeName === 'A' &&\n      locales.some((l) => l.lang === target.lang)\n    ) {\n      event.preventDefault();\n\n      // This line is what makes the App translate to another language\n      locale.set(target.lang);\n    }\n  }\n</script>\n",
    "<!-- @Layout:Base -->\n<div id=\"controls\" class=\"default-grid\">\n  <LanguageSelect locales={appData.locales} />\n</div>\n\n<div id=\"site-header\" class=\"default-grid with-gap\">\n  <Header />\n</div>\n\n<NavigationBar />\n\n<div class=\"BaseLayout default-grid\">\n  <slot />\n\n  <Pager\n    label=\"step\"\n    context={routes}\n  />\n</div>\n<!-- /@Layout -->\n\n<style>\n  .BaseLayout {\n    padding: 2em 1em;\n  }\n\n  @media (min-width: 60em) {\n    .BaseLayout {\n      padding: 2em 0;\n    }\n  }\n</style>\n\n<script>\n  import appData from '../../data/app.js';\n\n  import Header from '../Header.svelte';\n  import LanguageSelect from '../i18n/LanguageSelect.svelte';\n  import NavigationBar from '../NavigationBar.svelte';\n  import Pager from '../Pager.svelte';\n\n  let routes = [\n    {\n      title: 'START.TITLE',\n      path: '/'\n    },\n    {\n      title: 'SCOPE.TITLE',\n      path: '/evaluation/scope',\n    },\n    {\n      title: 'EXPLORE.TITLE',\n      path: '/evaluation/explore',\n    },\n    {\n      title: 'SAMPLE.TITLE',\n      path: '/evaluation/sample',\n    },\n    {\n      title: 'AUDIT.TITLE',\n      path: '/evaluation/audit',\n    },\n    {\n      title: 'SUMMARY.TITLE',\n      path: '/evaluation/summary',\n    },\n    {\n      title: 'REPORT.TITLE',\n      path: '/evaluation/view-report',\n    }\n  ];\n</script>\n"
  ],
  "names": [],
  "mappings": "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"
}